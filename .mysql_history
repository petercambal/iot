base Proxy ()
create table proxy( id char(36) UNIQUE NOT NULL PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
mac_address char(17), ip_address char(15), check (id <> "00000000-0000-0000-0000-000000000000"));
create table proxy( id char(36) UNIQUE NOT NULL PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  mac_address char(17), ip_address char(15), check (id <> "00000000-0000-0000-0000-000000000000"));
select * from proxy
;
select * from proxy
;
describe proxy;
drop table proxy;
create table proxy( 
id char(36) UNIQUE NOT NULL PRIMARY KEY, 
name VARCHAR(50) NOT NULL, 
description TEXT, 
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
mac_address char(17) UNIQUE,
ip_address char(15),
model varchar(30),
os VARCHAR(30),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table proxy(  id char(36) UNIQUE NOT NULL PRIMARY KEY,  name VARCHAR(50) NOT NULL,  description TEXT,  last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  mac_address char(17) UNIQUE, ip_address char(15), model varchar(30), os VARCHAR(30), check (id <> "00000000-0000-0000-0000-000000000000") );
describe proxy;
slect * from proxy
;
select * from proxy;
delete from proxy;
select * from proxy;
delete from proxy;
select * from proxy;
create table device (
id char(36) UNIQUE PRIMARY KEY, 
proxy_id char(36) NOT NULL,
name VARCHAR(50),
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table device ( id char(36) UNIQUE PRIMARY KEY,  proxy_id char(36) NOT NULL, name VARCHAR(50), last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table role(
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table role( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table resource(
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
method VARCHAR(6) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table resource( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, method VARCHAR(6) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table permission(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
description TEXT,
CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table permission( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, description TEXT, CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
describe 
;
mysqlshow;
describe database;
show;
show databases;
use iot$database
show tables;
describe role;
uuid()
;
UUID();
insert into role (id,name,description) values (UUID(),"proxy","proxy dedvice which sends information abou physical object")
;
select * from role;
insert into role (id,name,description) values (UUID(),"app","third party applications - the outer world");
insert into role (id,name,description) values (UUID(),"user","logged in user");
select * from role;
mysqldump > dump.sql
;
select * from role;
use iot$database;
select * from role;
insert into resource (id,name,method) values (UUID(),"proxy","get");
insert into resource (id,name,method) values (UUID(),"proxy","set");
insert into resource (id,name,method) values (UUID(),"proxy","delete");
insert into resource (id,name,method) values (UUID(),"device","get");
insert into resource (id,name,method) values (UUID(),"device","set");
insert into resource (id,name,method) values (UUID(),"device","delete");
select * from resource;
insert into resource (id,name,method) values (UUID(),"virtualEntity","get");
insert into resource (id,name,method) values (UUID(),"virtualEntity","set");
insert into resource (id,name,method) values (UUID(),"virtualEntity","delete");
insert into resource (id,name,method) values (UUID(),"property","get");
insert into resource (id,name,method) values (UUID(),"property","set");
insert into resource (id,name,method) values (UUID(),"property","delete");
select * from resource;
select * from permission;
insert into permission (id,role_id,resource_id) values (UUID(),"53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab"); -- proxy proxy set
insert into permission (id,role_id,resource_id) values (UUID(),"78c631a2-c54c-11e5-89ba-22000b79ceab","d1cdb926-c54e-11e5-89ba-22000b79ceab"); -- app virtualEntity get
insert into permission (id,role_id,resource_id) values (UUID(),"78c631a2-c54c-11e5-89ba-22000b79ceab","d1d5a6d1-c54e-11e5-89ba-22000b79ceab"); -- app property get
select * from permission;
update permission set description = "proxy(role) proxy set" where id ="2dc970b6-c54f-11e5-89ba-22000b79ceab"
;
update permission set description =app virtualEntity get" " where ="2dcabe55-c54f-11e5-89ba-22000b79ceab"
;
update permission set description ="app virtualEntity get"  where ="2dcabe55-c54f-11e5-89ba-22000b79ceab";
update permission set description ="app virtualEntity get"  where id="2dcabe55-c54f-11e5-89ba-22000b79ceab";
update permission set description ="app property get"  where id="2f8fd2f6-c54f-11e5-89ba-22000b79ceab";
select * from permission;
create table log(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
info TEXT,
timestamp timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table log( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, info TEXT, timestamp timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table log(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
info TEXT,
`timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table log( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, info TEXT, `timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `log`(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
info TEXT,
`timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `log`( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, info TEXT, `timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_resource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
drop table permission;
create table permission(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
description TEXT,
CONSTRAINT fk_perRole FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_perResource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table permission( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, description TEXT, CONSTRAINT fk_perRole FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_perResource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `log`(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
info TEXT,
`timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_logRole FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_logResource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `log`( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, info TEXT, `timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_logRole FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_logResource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
nsert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab","proxy(role) proxy set"); -- proxy proxy set
insert into permission (id,role_id,resource_id,description) values ("2dcabe55-c54f-11e5-89ba-22000b79ceab","78c631a2-c54c-11e5-89ba-22000b79ceab","d1cdb926-c54e-11e5-89ba-22000b79ceab","app virtualEntity get"); -- app virtualEntity get
insert into permission (id,role_id,resource_id,description) values ("2f8fd2f6-c54f-11e5-89ba-22000b79ceab","78c631a2-c54c-11e5-89ba-22000b79ceab","d1d5a6d1-c54e-11e5-89ba-22000b79ceab","app property get"); -- app property get
select * from permission;
insert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab","proxy(role) proxy set"); -- proxy proxy set
select * from permission;
insert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-220dwadawd00b79ceab","proxy(role) proxy set"); -- proxy proxy set
create table `virtualEntity` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `virtualEntity` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `property` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
virtualEntity_id char(36) NOT NULL,
device_id char(36) NOT NULL,
CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `property` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, virtualEntity_id char(36) NOT NULL, device_id char(36) NOT NULL, CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id), check (id <> "00000000-0000-0000-0000-000000000000") );
drop database iot%database;
drop database iot$database;
create database iot$database;
create table `proxy`( 
id char(36) UNIQUE PRIMARY KEY, 
name VARCHAR(50) NOT NULL, 
description TEXT, 
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
mac_address char(17) UNIQUE,
ip_address char(15),
model varchar(30),
os VARCHAR(30),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `proxy`(  id char(36) UNIQUE PRIMARY KEY,  name VARCHAR(50) NOT NULL,  description TEXT,  last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  mac_address char(17) UNIQUE, ip_address char(15), model varchar(30), os VARCHAR(30), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `device` (
id char(36) UNIQUE PRIMARY KEY, 
proxy_id char(36) NOT NULL,
name VARCHAR(50),
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `device` ( id char(36) UNIQUE PRIMARY KEY,  proxy_id char(36) NOT NULL, name VARCHAR(50), last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `virtualEntity` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `virtualEntity` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `property` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
entity_id char(36) NOT NULL,
device_id char(36) NOT NULL,
CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `property` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, entity_id char(36) NOT NULL, device_id char(36) NOT NULL, CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `role`(
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `role`( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `resource`(
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
method VARCHAR(6) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `resource`( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, method VARCHAR(6) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `permission`(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
description TEXT,
CONSTRAINT fk_perRole FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_perResource FOREIGN KEY (resource_id) REFERENCES `resource`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `permission`( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, description TEXT, CONSTRAINT fk_perRole FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_perResource FOREIGN KEY (resource_id) REFERENCES `resource`(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `group` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `group` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `entity_group` (
entity_id VARCHAR(50) NOT NULL,
group_id VARCHAR(50) NOT NULL,
description TEXT,
CONSTRAINT fk_grpEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_grpGrp FOREIGN KEY (group_id) REFERENCES `group`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `entity_group` ( entity_id VARCHAR(50) NOT NULL, group_id VARCHAR(50) NOT NULL, description TEXT, CONSTRAINT fk_grpEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_grpGrp FOREIGN KEY (group_id) REFERENCES `group`(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `log`(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
info TEXT,
`timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_logRole FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_logResource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `log`( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, info TEXT, `timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_logRole FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_logResource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
-- Initialize data
-- create roles
insert into role (id,name,description) values ("53a8d73b-c54c-11e5-89ba-22000b79ceab","proxy","proxy dedvice which sends information abou physical object");
insert into role (id,name,description) values ("78c631a2-c54c-11e5-89ba-22000b79ceab","app","third party applications - the outer world");
insert into role (id,name,description) values ("816982a1-c54c-11e5-89ba-22000b79ceab","user","logged in user");
-- create resources
insert into resource (id,name,method) values ("16499235-c54e-11e5-89ba-22000b79ceab","proxy","get");
insert into resource (id,name,method) values ("164b6688-c54e-11e5-89ba-22000b79ceab","proxy","set");
insert into resource (id,name,method) values ("164cf8aa-c54e-11e5-89ba-22000b79ceab","proxy","delete");
insert into resource (id,name,method) values ("164ddbf5-c54e-11e5-89ba-22000b79ceab","device","get");
insert into resource (id,name,method) values ("164e7317-c54e-11e5-89ba-22000b79ceab","device","set");
insert into resource (id,name,method) values ("17ad6e55-c54e-11e5-89ba-22000b79ceab","device","delete");
insert into resource (id,name,method) values ("d1cdb926-c54e-11e5-89ba-22000b79ceab","virtualEntity","get");
insert into resource (id,name,method) values ("d1d299f7-c54e-11e5-89ba-22000b79ceab","virtualEntity","set");
insert into resource (id,name,method) values ("d1d47605-c54e-11e5-89ba-22000b79ceab" ,"virtualEntity","delete");
insert into resource (id,name,method) values ("d1d5a6d1-c54e-11e5-89ba-22000b79ceab","property","get");
insert into resource (id,name,method) values ("d1d6d5f8-c54e-11e5-89ba-22000b79ceab","property","set");
insert into resource (id,name,method) values ("d267087f-c54e-11e5-89ba-22000b79ceab","property","delete");
--create permisssions
insert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab","proxy(role) proxy set"); -- proxy proxy set
--create permisssions insert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab","proxy(role) proxy set");
insert into permission (id,role_id,resource_id,description) values ("2dcabe55-c54f-11e5-89ba-22000b79ceab","78c631a2-c54c-11e5-89ba-22000b79ceab","d1cdb926-c54e-11e5-89ba-22000b79ceab","app virtualEntity get"); -- app virtualEntity get
insert into permission (id,role_id,resource_id,description) values ("2f8fd2f6-c54f-11e5-89ba-22000b79ceab","78c631a2-c54c-11e5-89ba-22000b79ceab","d1d5a6d1-c54e-11e5-89ba-22000b79ceab","app property get"); -- app property getcreate table `proxy`( 
id char(36) UNIQUE PRIMARY KEY, 
name VARCHAR(50) NOT NULL, 
description TEXT, 
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
mac_address char(17) UNIQUE,
ip_address char(15),
model varchar(30),
os VARCHAR(30),
check (id <> "00000000-0000-0000-0000-000000000000")
);
id char(36) UNIQUE PRIMARY KEY,  name VARCHAR(50) NOT NULL,  description TEXT,  last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  mac_address char(17) UNIQUE, ip_address char(15), model varchar(30), os VARCHAR(30), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `device` (
id char(36) UNIQUE PRIMARY KEY, 
proxy_id char(36) NOT NULL,
name VARCHAR(50),
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `device` ( id char(36) UNIQUE PRIMARY KEY,  proxy_id char(36) NOT NULL, name VARCHAR(50), last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `virtualEntity` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `virtualEntity` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `property` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
entity_id char(36) NOT NULL,
device_id char(36) NOT NULL,
CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `property` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, entity_id char(36) NOT NULL, device_id char(36) NOT NULL, CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `role`(
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `role`( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `resource`(
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
method VARCHAR(6) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `resource`( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, method VARCHAR(6) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `permission`(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
description TEXT,
CONSTRAINT fk_perRole FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_perResource FOREIGN KEY (resource_id) REFERENCES `resource`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `permission`( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, description TEXT, CONSTRAINT fk_perRole FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_perResource FOREIGN KEY (resource_id) REFERENCES `resource`(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `group` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description TEXT,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `group` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, check (id <> "00000000-0000-0000-0000-000000000000") );
create table `entity_group` (
entity_id VARCHAR(50) NOT NULL,
group_id VARCHAR(50) NOT NULL,
description TEXT,
CONSTRAINT fk_grpEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_grpGrp FOREIGN KEY (group_id) REFERENCES `group`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `entity_group` ( entity_id VARCHAR(50) NOT NULL, group_id VARCHAR(50) NOT NULL, description TEXT, CONSTRAINT fk_grpEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_grpGrp FOREIGN KEY (group_id) REFERENCES `group`(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `log`(
id char(36) UNIQUE PRIMARY KEY,
resource_id char(36) NOT NULL,
role_id char(36) NOT NULL,
info TEXT,
`timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_logRole FOREIGN KEY (role_id) REFERENCES role(id),
CONSTRAINT fk_logResource FOREIGN KEY (resource_id) REFERENCES resource(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `log`( id char(36) UNIQUE PRIMARY KEY, resource_id char(36) NOT NULL, role_id char(36) NOT NULL, info TEXT, `timestamp` timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_logRole FOREIGN KEY (role_id) REFERENCES role(id), CONSTRAINT fk_logResource FOREIGN KEY (resource_id) REFERENCES resource(id), check (id <> "00000000-0000-0000-0000-000000000000") );
-- Initialize data
-- create roles
insert into role (id,name,description) values ("53a8d73b-c54c-11e5-89ba-22000b79ceab","proxy","proxy dedvice which sends information abou physical object");
insert into role (id,name,description) values ("78c631a2-c54c-11e5-89ba-22000b79ceab","app","third party applications - the outer world");
insert into role (id,name,description) values ("816982a1-c54c-11e5-89ba-22000b79ceab","user","logged in user");
-- create resources
insert into resource (id,name,method) values ("16499235-c54e-11e5-89ba-22000b79ceab","proxy","get");
insert into resource (id,name,method) values ("164b6688-c54e-11e5-89ba-22000b79ceab","proxy","set");
insert into resource (id,name,method) values ("164cf8aa-c54e-11e5-89ba-22000b79ceab","proxy","delete");
insert into resource (id,name,method) values ("164ddbf5-c54e-11e5-89ba-22000b79ceab","device","get");
insert into resource (id,name,method) values ("164e7317-c54e-11e5-89ba-22000b79ceab","device","set");
insert into resource (id,name,method) values ("17ad6e55-c54e-11e5-89ba-22000b79ceab","device","delete");
insert into resource (id,name,method) values ("d1cdb926-c54e-11e5-89ba-22000b79ceab","virtualEntity","get");
insert into resource (id,name,method) values ("d1d299f7-c54e-11e5-89ba-22000b79ceab","virtualEntity","set");
insert into resource (id,name,method) values ("d1d47605-c54e-11e5-89ba-22000b79ceab" ,"virtualEntity","delete");
insert into resource (id,name,method) values ("d1d5a6d1-c54e-11e5-89ba-22000b79ceab","property","get");
insert into resource (id,name,method) values ("d1d6d5f8-c54e-11e5-89ba-22000b79ceab","property","set");
insert into resource (id,name,method) values ("d267087f-c54e-11e5-89ba-22000b79ceab","property","delete");
--create permisssions
insert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab","proxy(role) proxy set"); -- proxy proxy set
--create permisssions insert into permission (id,role_id,resource_id,description) values ("2dc970b6-c54f-11e5-89ba-22000b79ceab","53a8d73b-c54c-11e5-89ba-22000b79ceab","164b6688-c54e-11e5-89ba-22000b79ceab","proxy(role) proxy set");
insert into permission (id,role_id,resource_id,description) values ("2dcabe55-c54f-11e5-89ba-22000b79ceab","78c631a2-c54c-11e5-89ba-22000b79ceab","d1cdb926-c54e-11e5-89ba-22000b79ceab","app virtualEntity get"); -- app virtualEntity get
insert into permission (id,role_id,resource_id,description) values ("2f8fd2f6-c54f-11e5-89ba-22000b79ceab","78c631a2-c54c-11e5-89ba-22000b79ceab","d1d5a6d1-c54e-11e5-89ba-22000b79ceab","app property get"); -- app property gets
select * from property;
show tables;
select * from proxy;
use iot$databse;
select * from proxy;
create table `domain` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
parent_id char(36),
CONSTANT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `domain` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, parent_id char(36), CONSTANT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id), check (id <> "00000000-0000-0000-0000-000000000000")  );
create table `domain` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
parent_id char(36) NOT NULL,
CONSTANT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `domain` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, parent_id char(36) NOT NULL, CONSTANT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id), check (id <> "00000000-0000-0000-0000-000000000000")  );
create table `domain` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
parent_id char(36) NOT NULL,
CONSTRAINT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `domain` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, parent_id char(36) NOT NULL, CONSTRAINT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id), check (id <> "00000000-0000-0000-0000-000000000000")  );
describe viertualEntity;
describe virtualEntity;
drop table virtualEntity;
select * from property;
describe property;
show tables;
drop table domain;
create table `domain` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
parent_id char(36),
CONSTRAINT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `domain` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, parent_id char(36), CONSTRAINT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id), check (id <> "00000000-0000-0000-0000-000000000000")  );
insert into domain ('id,name') values ("1ee79924-ccf1-11e5-964a-22000b95cd49", "TOP LEVEL DOMAIN");
mysql> create table `domain` (
    -> id char(36) UNIQUE PRIMARY KEY,
    -> name VARCHAR(50) NOT NULL,
    -> parent_id char(36),
    -> CONSTRAINT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id),
    -> check (id <> "00000000-0000-0000-0000-000000000000")
    -> 
    -> );
mysql> create table `domain` (     -> id char(36) UNIQUE PRIMARY KEY,     -> name VARCHAR(50) NOT NULL,     -> parent_id char(36),     -> CONSTRAINT fk_parent_domain FOREIGN KEY (parent_id) REFERENCES `domain`(id),     -> check (id <> "00000000-0000-0000-0000-000000000000")     ->      -> );
Query OK, 0 rows affected (0.08 sec)
mysql> insert into domain ('id,name') values ("1ee79924-ccf1-11e5-964a-22000b95cd49", "TOP LEVEL DOMAIN");
Query OK, 0 rows affected (0.08 sec) mysql> insert into domain ('id,name') values ("1ee79924-ccf1-11e5-964a-22000b95cd49", "TOP LEVEL DOMAIN");
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''id,name') values ("1ee79924-ccf1-11e5-
964a-22000b95cd49", "TOP LEVEL DOMAIN")' at line 1
mysql> ;
check the manual that corresponds to your MySQL server version for the right syntax to use near ''id,name') values ("1ee79924-ccf1-11e5-
964a-22000b95cd49", "TOP LEVEL DOMAIN")' at line 1 mysql>;
insert into domain (id,name) values ("1ee79924-ccf1-11e5-964a-22000b95cd49", "TOP LEVEL DOMAIN");
select * from domain;
drop table virtualEntity;
describe virtualEntity;
describe proxy;
select * from proxy;
delete from proxy;
delete from virtualEntity;
drop table device;
drop table proxy;
create table `proxy`( 
id char(36) UNIQUE PRIMARY KEY, 
name VARCHAR(50) NOT NULL, 
description TEXT, 
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
mac_address char(17) UNIQUE,
ip_address char(15),
model varchar(30),
os VARCHAR(30),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `proxy`(  id char(36) UNIQUE PRIMARY KEY,  name VARCHAR(50) NOT NULL,  description TEXT,  last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  mac_address char(17) UNIQUE, ip_address char(15), model varchar(30), os VARCHAR(30), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `device` (
id char(36) UNIQUE PRIMARY KEY, 
proxy_id char(36) NOT NULL,
name VARCHAR(50),
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id) ON DELETE CASCADE,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `device` ( id char(36) UNIQUE PRIMARY KEY,  proxy_id char(36) NOT NULL, name VARCHAR(50), last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id) ON DELETE CASCADE, check (id <> "00000000-0000-0000-0000-000000000000") );
select * from proxy;
select * from device;
delete * from proxy;
delete  from proxy;
selet * from device;
select * from device;
drop table proxy;
select * from property;
drop table virtualEntity;
drop table entity_group;
drop table virtualEntity;
create table `virtualEntity` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description TEXT,
domain_id char(36),
CONSTRAINT fk_domain FOREIGN KEY (domain_id) REFERENCES `domain`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `virtualEntity` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, description TEXT, domain_id char(36), CONSTRAINT fk_domain FOREIGN KEY (domain_id) REFERENCES `domain`(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `property` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
entity_id char(36) NOT NULL,
device_id char(36) NOT NULL,
CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `property` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, entity_id char(36) NOT NULL, device_id char(36) NOT NULL, CONSTRAINT fk_propEntity FOREIGN KEY (virtualEntity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `property` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
entity_id char(36) NOT NULL,
device_id char(36) NOT NULL,
CONSTRAINT fk_propEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `property` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, entity_id char(36) NOT NULL, device_id char(36) NOT NULL, CONSTRAINT fk_propEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `entity_group` (
entity_id VARCHAR(50) NOT NULL,
group_id VARCHAR(50) NOT NULL,
description TEXT,
CONSTRAINT fk_grpEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_grpGrp FOREIGN KEY (group_id) REFERENCES `group`(id),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `entity_group` ( entity_id VARCHAR(50) NOT NULL, group_id VARCHAR(50) NOT NULL, description TEXT, CONSTRAINT fk_grpEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_grpGrp FOREIGN KEY (group_id) REFERENCES `group`(id), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `proxy`( 
id char(36) UNIQUE PRIMARY KEY, 
name VARCHAR(50) NOT NULL, 
description TEXT, 
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
mac_address char(17) UNIQUE,
ip_address char(15),
model varchar(30),
os VARCHAR(30),
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `proxy`(  id char(36) UNIQUE PRIMARY KEY,  name VARCHAR(50) NOT NULL,  description TEXT,  last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  mac_address char(17) UNIQUE, ip_address char(15), model varchar(30), os VARCHAR(30), check (id <> "00000000-0000-0000-0000-000000000000") );
create table `device` (
id char(36) UNIQUE PRIMARY KEY, 
proxy_id char(36) NOT NULL,
name VARCHAR(50),
last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, 
CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id) ON DELETE CASCADE,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `device` ( id char(36) UNIQUE PRIMARY KEY,  proxy_id char(36) NOT NULL, name VARCHAR(50), last_connected timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,  CONSTRAINT fk_proxy FOREIGN KEY (proxy_id) REFERENCES proxy(id) ON DELETE CASCADE, check (id <> "00000000-0000-0000-0000-000000000000") );
show tables;
describe virtualEntity;
select * from domain;
select * from proxy;
select * from domain;
insert into domain (id,name, parent_id) values (UUID(),TUKE,"1ee79924-ccf1-11e5-964a-22000b95cd49")
;
insert into domain (id,name, parent_id) values (UUID(),"TUKE","1ee79924-ccf1-11e5-964a-22000b95cd49")
;
select * from domain;
insert into domain (id,name, parent_id) values (UUID(),6","46760446-cd02-11e5-89ba-22000b79ceab")
;
select * from domain;
select * from property;
describe property;
select * from virtualEntity;
select * from device;
insert into property(id,name,entity_id,device_id) values (UUID(),"Nejaka property","39eea24e-ccf6-11e5-9506-22000b9881c4","278c5bd8-c818-11e5-a133-22000b96d1c9");
select * from property;
select * from virtualEntity ve join property p on ve.id = p.entity_id;
insert into property(id,name,entity_id,device_id) values (UUID(),"Nejaka property","39eea24e-ccf6-11e5-9506-22000b9881c4","39eea24e-ccf6-11e5-9506-22000b9881c4");
select * from device;
insert into property(id,name,entity_id,device_id) values (UUID(),"Nejaka property","39eea24e-ccf6-11e5-9506-22000b9881c4","3b84c1a2-c818-11e5-a133-22000b96d1c9");
select * from virtualEntity ve join property p on ve.id = p.entity_id;
select distinct(*) from virtualEntity ve join property p on ve.id = p.entity_id;
select distinct * from virtualEntity ve join property p on ve.id = p.entity_id;
select * from property;
select * from virtualEntity;
select * from property;
update property set name = "Teplota v izbe" where id="e6f868da-d4c1-11e5-89ba-22000b79ceab";
select * from property;
describe domain
;
select * from device;
select * from proxy;
select * from virtualEntity;
select * from virtualEntity where id in ("39eea24e-ccf6-11e5-9506-22000b9881c4");
select * from virtualEntity;
delete from virtualEntity;
select * from device
;
selete from device;
delete from property
;
select * from device;
delete from device;
delete from virtualEntity
;
select * from virtualEntity;
select * from proxy;
delete * from proxy;
select * from proxy;
delete from proxy;
select * from proxy;
delete from proxy;
select * from proxy;
select * from device;
delete from proxy;
select * from proxy;
select *from device;
select * from proxy;
update proxy where id = "9ff77dea-d63d-11e5-abe6-22000b97c690";
CREATE TRIGGER trigger_name
AFTER UPDATE
   ON table_name FOR EACH ROW
BEGIN
   -- variable declarations
   -- trigger code
CREATE TRIGGER proxy_after_update AFTER UPDATE ON proxy FOR EACH ROW BEGIN UPDATE proxy SET last_connected = CURDATE() WHERE id = NEW.id END;
CREATE TRIGGER proxy_after_update AFTER UPDATE ON proxy FOR EACH ROW BEGIN UPDATE proxy SET last_connected = CURDATE() WHERE id = NEW.id; END;
CREATE TRIGGER proxy_after_update AFTER UPDATE ON proxy BEGIN SET NEW.last_connected = CURDATE() END;
CREATE TRIGGER proxy_after_update AFTER UPDATE ON proxy FOR EACH ROW BEGIN SET last_connected = CURDATE() WHERE id = NEW.id; END;
CREATE TRIGGER proxy_after_update AFTER UPDATE ON proxy FOR EACH ROW BEGIN SET NEW.last_connected = CURDATE() WHERE id = NEW.id; END;
CREATE TRIGGER proxy_after_update BEFORE UPDATE ON proxy FOR EACH ROW BEGIN SET last_connected = CURDATE() WHERE id = NEW.id; END;
CREATE TRIGGER proxy_after_update BEFORE UPDATE ON proxy FOR EACH ROW BEGIN SET NEW.last_connected = CURDATE( END;
CREATE TRIGGER proxy_after_update BEFORE UPDATE ON proxy FOR EACH ROW BEGIN SET NEW.last_connected = CURDATE()END;
CREATE TRIGGER proxy_after_update BEFORE UPDATE ON proxy FOR EACH ROW BEGIN SET NEW.last_connected = CURDATE() END;
select * from proxy'
;
'
;
select * from proxy;
select CURRENT_TIMESTAMP;
update peoxy set last_connected = CURRENT_TIMESTAMP();
update proxy set last_connected = CURRENT_TIMESTAMP();
select CURRENT_TIMESTAMP;
select * from proxy;
update proxy set last_connected = CURRENT_TIMESTAMP() where id="9ff77dea-d63d-11e5-abe6-22000b97c690";
select * from proxy;
select * from device;
select * from property;
select * from proxy;
select * from devicel
;
select * from device;
select * from virtualEntity;
delete from devicel
;
delete from device;
delete from proxy;
select * from proxy;
select count(*) from proxy;
select * from [roxy;
select * from proxy;
delete from proxy;
select * from device;
select * from proxy;
delete from proxy;
select * from proxy;
select * from device;
delete from proxy;
select * from device;
select * from proxy;
select * from virtualEntity;
select * from domain;
select * from virtualEntity;
delete from proxy;
select * from proxy;
select * from device;
select * from virtualEntity;
select * from property;
select * from device;
select * from property;
select * from proxy;
delete from property;
drop table property;
create table `property` (
id char(36) UNIQUE PRIMARY KEY,
name VARCHAR(50) NOT NULL,
entity_id char(36) NOT NULL,
device_id char(36) NOT NULL,
CONSTRAINT fk_propEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id),
CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id) ON DELETE CASCADE,
check (id <> "00000000-0000-0000-0000-000000000000")
);
create table `property` ( id char(36) UNIQUE PRIMARY KEY, name VARCHAR(50) NOT NULL, entity_id char(36) NOT NULL, device_id char(36) NOT NULL, CONSTRAINT fk_propEntity FOREIGN KEY (entity_id) REFERENCES virtualEntity(id), CONSTRAINT fk_propDevice FOREIGN KEY (device_id) REFERENCES device(id) ON DELETE CASCADE, check (id <> "00000000-0000-0000-0000-000000000000") );
select * from proxy;
select * from property;
select * from virtualEntity;
delete from virtualEntity;
select * from proxy;
select * from virtualEntity;
select * from device;
select * from property;
select * from proxy;
select * from property;
select * from proxy;
select * from property;
select * from virtualEntity;
select * from property;
select * from proxy;
select * from device;
select * from proxy;
select * from property;
select * from virtualEntity;
select * from proxy;
select * from property;;
select * from group;
select * from proxy;
select * from group;
describe group;
show tables
;
select * from permission;
select * from `group`;
describe `group`;
describe entity_group;
select * from virtualEntity;
insert into virtualEntity (id,name,description,domain_id) values (UUID(),"Test","Testovacia entita","1ee79924-ccf1-11e5-964a-22000b95cd49");
select * from virtualEntity;
insert into group (id,name,description) values (UUID(),"Group","GrupenSexen");
insert into `group` (id,name,description) values (UUID(),"Group","GrupenSexen");
select * from `group`;
insert into entity_group (entity_id,group_id) values ("04aff2cc-d6b0-11e5-a820-22000b1e83c2","6364a396-d6b2-11e5-89ba-22000b79ceab");
insert into entity_group (entity_id,group_id) values ("2c918991-d6b2-11e5-89ba-22000b79ceab","6364a396-d6b2-11e5-89ba-22000b79ceab");
select * from entity_group;
select * from proxy;
delete * from proxy;
delete from proxy;
select * from proxy;
select * from device;
select * from property;
select * from virtualEntity;
select * from proxy;
delete from proxy;
select * from proxy;
delete from proxy;
select * from proxy;
delete from proxy;
delete from virtualEntity;
delete from group;
delete from entity_group;
delete from 'group';
delete from `group`;
delete from virtualEntity;
select * from proxy;
delete from proxy;
select * from device;
select * from virtualEntity;
select * from property;
select * from proxy;
delete from proxy;
select * from virtualEntity;
delete from proxy;
select * from proxy;
delete from proxy;
select * from virtualEntity;
INSERT INTO virtualEntity (id,name,description,domain_id) VALUES #011#011#011 ('2fdd3d68-d6f3-11e5-abe6-22000b97c690','RasPi','Raspberri Pi co mam doma','1ee79924-ccf1-11e5-964a-22000b95cd49');
;
INSERT INTO virtualEntity (id,name,description,domain_id) VALUES ('2fdd3d68-d6f3-11e5-abe6-22000b97c690','RasPi','Raspberri Pi co mam doma','1ee79924-ccf1-11e5-964a-22000b95cd49');
select * from virtualEntity;
delete from virtualEntity;
delete from proxy;
select * from virtualEntity;
select * from proxy;
select * from virtualEntity;
select * from proxy;
select * from device;
select * from property;
select * from virtualEntity;
select * from proxy;
select * from device;
select * from proxy;
select * from device;
select * from proxy;
select * from device;
select * from property;
select * from virtualEntity;
select * from proxy;
select * from virtualEntity;
select * from property;
select * from device;
select * from proxy;
select * from device;
insert into device (id,proxy_id,name) values (UUID(),"741035bb-e1f9-11e5-a596-22000b79ceab","Test device");
UPDATE device set last_connected = CURRENT_TIMESTAMP()
;
UPDATE device set last_connected = CURRENT_TIMESTAMP();
select * from resources;
select * from resource;
select * from permission;
insert into permission (id,resource_id,role_id,description) values (UUID(),"164cf8aa-c54e-11e5-89ba-22000b79ceab","816982a1-c54c-11e5-89ba-22000b79ceab","user delete proxy");
select * from proxy'
;
dwa
awdaf;
;
;;
;'
;
select * from proxy'
;
dwa
awdaf;
;
;
;
;;
;';
select * from proxy;
insert into proxy(id,name,description,mac_address,ip_address,model,os) values (UUID(),"dawaw","dawdwa","awdawda","dawawd","dwadaw","dawda");
select * from domain;
select * from virtualEntity;
update virtualEntity set domain_id = "46760446-cd02-11e5-89ba-22000b79ceab";
select * from permission;
--max_connections=5
;
--max_connections=#;
;
max_connections=5;
mysqld --max_connections=5;
mysqld --max_connections
;
show variables like 'max_connections';
show variables like 'max_user_connections';
select * from proxy;
insert into proxy(id,name,description) values (UUID(),"test","testtest");
select * from proxy;
insert into proxy(id,name,description) values (UUID(),"test","testtest");
select * from permission;
select * from respources;
select * from resources;
select * from resource;
insert into permission (id, resource_id,role_id,description) values (UUID(),"164b6688-c54e-11e5-89ba-22000b79ceab","816982a1-c54c-11e5-89ba-22000b79ceab","user proxy set");
insert into permission (id, resource_id,role_id,description) values (UUID(),"164b6688-c54e-11e5-89ba-22000b79ceab","816982a1-c54c-11e5-89ba-22000b79ceab
;
:
|
;
